#!/bin/bash

set -eo pipefail

trap exit INT TERM

################################################################################

dist=bin
platforms=(linux darwin)
#platforms=(darwin)

################################################################################

echo "[info] cleaning"

if [ -d ${dist} ] && [ "$(ls -A ${dist})" ] ; then
  go clean
  rm -rf ${dist}/*
fi

if [ -n "${VERSION}" ] ; then
  version="${VERSION}"
elif [ -n "${GIT_TAG_NAME}" ] && [[ "${GIT_TAG_NAME}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-.+)?$ ]] ; then
  version="${GIT_TAG_NAME}"
else
  version="snapshot"
fi

################################################################################

package_service() {
  echo "[info] building for ${1}"

  GOOS=${1} \
  GOARCH=amd64 \
  CGO_ENABLED=0 \
  go build -a -o ${dist}/${1}-${version} \
    --ldflags "-X main.version=$version"

  if [ $? -eq 0 ] ; then
    chmod +x ${dist}/${1}-${version}
  else
    exit 1
  fi
}

################################################################################

echo "[info] building ${version}"

for platform in "${platforms[@]}" ; do
  package_service ${platform} &
done
wait

echo "[info] done"

################################################################################
