#!/bin/bash

set -eo pipefail

trap exit INT TERM

dist=bin
version=latest
platforms=(darwin)




################################################################################

get_version() {
  if [ -n "${VERSION}" ] ; then
    echo "${VERSION}"
  elif [ -n "${GIT_TAG_NAME}" ] && [[ "${GIT_TAG_NAME}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-.+)?$ ]] ; then
    echo "${GIT_TAG_NAME}"
  else
    echo "${version}"
  fi
}

package_service() {
  output=${1}/${2}-${3}

  if [ -f ${output} ] ; then
    rm -f ${output}
  fi

  echo "[info] packaging for ${2}"

  GOOS=${2} \
  GOARCH=amd64 \
  CGO_ENABLED=0 \
  \
  go build -a -o ${output} \
  \
  --ldflags "-X main.version=${3}" || {
    (>&2 echo "unable to build ${2} distribution")
    exit 1
  }

  chmod +x ${output}
}

################################################################################

while [[ $# -gt 0 ]] ; do
key="$1"

case $key in
    -t|--target)
    IFS=',' read -ra platforms <<< "$2"
    shift
    shift
    ;;
    -o|--output)
    dist="$2"
    shift
    shift
    ;;
    *)
    shift
    ;;
esac
done

################################################################################

echo "[info] cleaning"
go clean

echo "[info] packaging ${version}"
version=$(get_version)
for platform in "${platforms[@]}" ; do
  (package_service ${dist} ${platform} ${version}) #&
done
#wait

echo "[info] done"
ls -1 ${dist} | sed "s/.*/       + ${dist}\/&/"

################################################################################
